#include<bits/stdc++.h>
using namespace std;
typedef pair<long long int,long long int> pa;
#define resize(A) A.resize(unique(A.begin(), A.end()) - A.begin())
#define pb push_back
#define  MAX 100005
#define ll long long int
long long int MOD=998244353;
long long int mod=1e9+7;
long long int INF=1e18;
bool vis[MAX]={0};
ll dis[MAX]={0};
multiset<pair<ll,ll>> p;
void dijkstra(vector<pair<ll,ll>>adj[],ll x)
{
    for(int i=0;i<MAX;i++)
        {dis[i]=INF;vis[i]=0;}
    dis[x]=0;
    p.insert({0,x});
    while(!p.empty())
    {
        pair<ll,ll> q;
        q=*p.begin();
        p.erase(p.begin());
        x=q.second;
        if(!vis[x])
        {
            vis[x]=1;
            for(auto j:adj[x])
            {
                ll y,w;
                w=j.first;
                y=j.second;
                if(dis[y]>dis[x]+w&&!vis[y])
                {
                    dis[y]=dis[x]+w;
                    p.insert({dis[y],y});
                }
            }
        }
    }
}
int main()
{
    int t;
    cin>>t;
    while(t--)

    {int n,m;
    cin>>n>>m;
    vector<pair<ll,ll>> adj[n+1];
    for(int i=0;i<m;i++)
    {
        int a,b,w;
        cin>>a>>b>>w;
        // here w is weight between a and b;
        adj[a].pb({w,b});
        adj[b].pb({w,a});
    }
    ll start;
    cin>>start;
    dijkstra(adj,start);
    for(int i=1;i<=n;i++)
    {
        if(i==start)
            continue;
        if(dis[i]==INT_MAX)
            cout<<-1<<" ";
        else
            cout<<dis[i]<<" ";
    }cout<<endl;}
    cout << endl;
    return 0;
}
